# Создаем пустой список lst (<class 'list'>) для хранения данных.
lst = []

# Определяем фвспомогательные функции

# Определяем функцию для добавления новых объектов
def add():
    # Создаем пустую переменную vvod (<class 'str'>)
    vvod = ''
    # Создаем цикл while, который будет выполнятся до тех пор пока значение переменной vvod
    # не примет значение 'стоп'
    while vvod != "стоп":
        # Вывод на экран предложения ввести параметры автомобиля
        print("Введите цвет, объем двигателя и производителя автомобиля после пробела (если машин больше нет, напишите команду 'стоп':")
        # Создаем переменную avt (<class 'list'>) в которую при помощи функции input() записываются данные введенные с клавиатуры
        # при помощи метода split строка с клавиатуры преобразуется в список разрезанный на части по пробелам
        avt = input().split()
        # Проверяем, если переменная avt не пуста
        if avt != []:
            # Присваиваем переменной vvod значение первого элемента списка avt
            vvod = avt[0]
        # Если переменная avt пуста
        else:
            # пропускаются все оставшиеся инструкции до конца цикла, и исполнение цикла продолжается со следующей итерации
            continue
        # Проверяем, если переменная vvod не равна 'стоп'
        if vvod != 'стоп':
            # То добавляем список полученный с клавиатуры в список lst
            # Формат списка lst:
            # [[цвет_1, объем дигателя_1, производитель_1], [цвет_2, объем дигателя_2, производитель_2], ... , [цвет_n, объем дигателя_n, производитель_n]]
            lst.append(avt)
    # Возвратом выполнения функции служит булевое значение True
    return True

# Определяем функцию для изменения существующих объектов            
def edit():
    # Создаем переменную n <class 'int'> равную количеству объектов (длине) списка lst
    n = len(lst)
    # Вывод на экран подтверждения изменения параметров
    print("Чтобы изменить параметры нажмите 'Enter'")
    # Создаем переменную vvod (<class 'str'>) в которую при помощи функции input() записываются данные введенные с клавиатуры
    vvod = input()
    
    # Создаем цикл while, который будет выполнятся до тех пор пока значение переменной vvod
    # не примет значение 0. Пока это значение будет отлиным от 0 фунция edit() будет ожидать ввода изменяемых параметров
    while vvod != "0":
        # Создаем цикл for с фукцией range. Цикл будет исполняться столько раз, сколько объектов хранится в переменной lst
        for i in range(len(lst)):
            # В ходе выполнения цикла на экран с новой строки выводятся параметры объектов. 
            # Количество строк равно количеству объектов в переменной lst
            print(' '.join(lst[i]))
        # Вывод на экран приглашение ввести порядковый номер объекта из переменной lst    
        print("Чтобы изменить параметры выберите номер введенной машины от 1 до", n, ", по окончанию измениения параметров - введите цифру '0'")
        # Создается переменная ch <class 'int'>. При помощи функции input() и функции int()
        # данные введенные с клавиатуры преобразуются в целое число и сохраняются в переменную ch
        ch = int(input())
        
        # Проверяем, если переменная ch равна 0
        if ch == 0:
            # Передаем в цикл while значение True, тем самым прекращаем его выполнение
            return True
        
        # В случае если значение ch не равно 0, фунция edit() продолжает свое выполнение и выводит на экран предложение
        # указать какой параметр пользователь желает поменять
        print("Введите какой параментр хотите изменить [цвет, объем двигателя, производитель]")
        # При помощи функции input() сохраняем в переменной vvod (<class 'str'>) строку с параметром, который необходимо поменять
        vvod = input()

        # Если необходимо поменять цвет и переменная vvod имеет соответствующее значение        
        if vvod == 'цвет':
            # На экран выводится предложение ввести новое значение цвета
            print("Введите новый цвет")
            # При помощи функции input() сохраняем в переменной a (<class 'str'>) строку с новым значением цвета
            a = input()
            # В списке объектов из переменной lst у выбранного объекта (с учетом начала отсчета в списках от нуля, 
            # первый индекс объекта уменьшается на 1 [ch-1]) параметр с индексом [0], т.е. цвет.
            lst[ch-1][0] = a

        # Если необходимо поменять объем двигателя и переменная vvod имеет соответствующее значение            
        elif vvod == 'объем двигателя':
            # На экран выводится предложение ввести новое значение объема двигателя
            print("Введите новый объём двигателя")
            # При помощи функции input() сохраняем в переменной a (<class 'str'>) строку с новым значением объема двигателя
            a = input()
            # В списке объектов из переменной lst у выбранного объекта (с учетом начала отсчета в списках от нуля, 
            # первый индекс объекта уменьшается на 1 [ch-1]) параметр с индексом [1], т.е. объем двигателя.
            lst[ch-1][1] = a
                    
        # Если необходимо поменять наименование производителя и переменная vvod имеет соответствующее значение 
        elif vvod == 'производитель':
            # На экран выводится предложение ввести новое значение производителя
            print("Введите нового производителя")
            # При помощи функции input() сохраняем в переменной a (<class 'str'>) строку с новым значением производителя
            a = input()
            # В списке объектов из переменной lst у выбранного объекта (с учетом начала отсчета в списках от нуля, 
            # первый индекс объекта уменьшается на 1 [ch-1]) меняется параметр с индексом [2], т.е. производитель.
            lst[ch-1][2] = a

        # Производим проверку переменной vvod на равенство ее 0
        elif vvod == 0:
            # Если значение vvod равно 0, исполнение функции перывается инструкцией break
            break
        # Если пользователем введено некорректное значение изменяемого параметра или не 0, то        
        else:
            # Функция предложит ввести корректное наименование изменяемого параметра
            print("Введите корректное значение")
                    
# Определяем функцию для удаления существующих объектов                     
def delete():
    # Создаем цикл for с фукцией range. Цикл будет исполняться столько раз, сколько объектов хранится в переменной lst
    for i in range(len(lst)):
        # В ходе выполнения цикла на экран с новой строки выводятся параметры объектов. 
        # Количество строк равно количеству объектов в переменной lst
        print(' '.join(lst[i]))

    # Создаем переменную n <class 'int'> равную количеству объектов (длине) списка lst        
    n = len(lst)
    # Вывод на экран приглашение ввести порядковый номер объекта из переменной lst для его последующего удаления
    print("Введите номер автомобиля который хотите удалить, число от 1 до", n)
    # Создается переменная a с порядковым номером удаляемого автомобиля. При помощи функции input() и функции int()
    # данные введенные с клавиатуры преобразуются в целое число и сохраняются в переменную a <class 'int'>
    a = int(input())
    # Из списка автомобилей lst, удаляется автомобиль находящийся под соответствующим номером.
    # C учетом начала отсчета в списках от нуля, индекс объекта уменьшается на 1 [a-1]
    lst.remove(lst[a-1])
    # Возвратом выполнения функции служит булевое значение True
    return True

# Определяем функцию для просмотра существующих объектов
def pokaz():
    # Если значение переменной vvod равно "показать список" и при этом список автомобилей не пустой
    if vvod == "показать список" and (lst != []):
        # Создаем цикл for с фукцией range. Цикл будет исполняться столько раз, сколько объектов хранится в переменной lst
        for i in range(len(lst)):
        # В ходе выполнения цикла на экран с новой строки выводятся параметры объектов. 
        # Количество строк равно количеству объектов в переменной lst
            print(' '.join(lst[i]))
    # Если значение переменной vvod равно "показать список" и при этом список автомобилей пустой
    elif vvod == "показать список" and (lst == []):
        # На экран выводится предложение добавить в список автомобиль.
        print("Для сначала добавьте машины")
    

# Ниже идет текст самой программы.
# Создается переменная prog которой присваивается значение отличное от "закончить"            
prog = "run"
# Создаем цикл while, который будет выполнятся до тех пор пока значение переменной prog
# не примет значение 'закончить'
while prog != "закончить":
    # На экран выводим приглашение по работе со списком
    print("Введите то, что хотите сделать: 'добавить','изменить','удалить','закончить','показать список'")
    # Создаем переменную vvod (<class 'str'>) в которую при помощи функции input() записываются данные введенные с клавиатуры
    vvod = input()
    # Если значение пременной vvod равно "добавить"
    if vvod == "добавить":
        # Выполняем функцию add() определенную нами ранее
        add()

    # Если значение пременной vvod равно "изменить"        
    elif vvod == "изменить":
        # Выполняем функцию edit() определенную нами ранее
        edit()
        
    # Если значение пременной vvod равно "удалить"
    elif vvod == "удалить":
        # Выполняем функцию delete() определенную нами ранее
        delete()
    
    
    # Если значение пременной vvod равно "закончить"
    elif vvod == "закончить":
        # Присваиваем переменной prog значение "закончить"
        prog == "закончить"
        # Выполняем инструкцию break. Завершаем цикл while
        break
    
    # Если значение пременной vvod равно "показать список"
    elif vvod == "показать список":
        # Выполняем функцию pokaz() определенную нами ранее
        pokaz()


    
    
# Ошибка в 2 строках ниже. Отражает список без последнего элемента
# Переделано ниже
#for i in range(len(lst)-1):
#    print(' '.join(lst[i]))        
        
        
# Создаем цикл for с фукцией range. Цикл будет исполняться столько раз, сколько объектов хранится в переменной lst
for i in range(len(lst)):
    # В ходе выполнения цикла на экран с новой строки выводятся параметры сохраненных в переменной lst объектов. 
    # Количество строк равно количеству объектов в переменной lst
    print(' '.join(lst[i]))        
        
        
        
        
        
        
        
        
        
        
        
